# TODOs:

PROC:    Save All
PROC:    Run All Tests
PROC:    Test
PROC:    Commit And Push

# DONE: Add a maximum to the number of blanks to print so you can't stall out the program with
        a big number, say 10,000 max



# doing now:



# consider placement:



# do next:

# TODO: For attendance events should be able to put the length of the event
    Maybe store as a duration or maybe as an end time
        ! Should display the end time and not a duration, should take an end time or maybe also
                a duration as an optional parameter
            Display events as follows:
                01:00 - 08:00 : ATND: 2: tag: desc
                01:00 - ///// : ATND: 2: tag: desc
                09:00 (  3H  ): DDLN: 3: tag: desc
                ---
                Truth is that the id is not useful unless you want to modify or delete; it is
                        useless at a glance, it just needs to exist in a certain position
                        definitely on the screen, so it should be placed as the rightmost "standard
                        length" printed value
                Consider fixing the formatting on the id so that each event lines up regardless of
                        id digits even to the right of the id
                Consider briefly the rest of the formatting as well
                    Probably stop padding times with a zero and just pad with a space, harder to
                            see with the zero
            ! May have to change the way that storing and loading are done based on now having
                    2 different true types of events, or you could just store null values, or
                    you could create two different subclasses of event
                ! Note that you may very soon essentially add a third "TODO_" kind of event
            Should allow duration to effectively be zero (unknown or don't care) and if displaying
                    can just put a ? instead of a number for end time

# TODO: allow events to lack a date, so they are just todos basically
    ! Maybe should not do this, after all the purpose of a scheduler is to deal with dates and
            times, todos and priorities are for a todo_ manager
        Anyways for this to serve as a todo_ manager I would have to put all my todos in it but
                that does not make sense, it is better just to use it to keep appointments and
                deadlines

# TODO: probably need to put the modify command back as it was removed with this last commit
    Should consider what other complication may be induced in terms of what "modify" should end
            up looking like
    Probably should just make one command for ATND and once for DDLN: 'ma' and 'md'

# TODO: make the logging actually work, when a critical error is observed, nothing gets logged

# TODO: fix big parse function in Input_Parser to make the part that calls the parse functions
        and then maybe gets a str simpler, just chunky repetitive ifs for no reason

# TODO: allow filtered schedule print based on 'type' and 'tag'
# TODO: add some sort of totals of durations, and totals by event type

# TODO: Could put in many modify commands
        Add command to just change the date and or time or duration of an event

# TODO: add some manner of feature regarding removing events that have passed

# TODO: add recurring events

# TODO: consider autosave and more intelligent backup saver
# TODO: add delete backups function

# TODO: For attendance events could allow inputting a duration instead of an end time and having
        the program calculate the end time from that



# unsorted:
# TODO: integrate my human readable csv in terms of settings input
# TODO: put some variable somewhere for the '.' and '|' and ' ' chars
# TODO: figure out the os Traceback occurring from 'python Scheduler.py' run in the project
        directory in the command line
# TODO: put back in info logging of commands without console output
# TODO:? consolidate input parser direct function tests
# TODO: add more tests
